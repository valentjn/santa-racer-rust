# Copyright (C) 2020 Julian Valentin
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: "CI"

on:
  push:
    branches:
      - "develop"
    tags:
      - "*"
  pull_request:
    branches:
      - "develop"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: "always"

jobs:
  create_github_release:
    name: "CI - Create GitHub Release Job"
    runs-on: "ubuntu-20.04"

    outputs:
      upload_url: ${{ steps.create_github_release.outputs.upload_url }}

    steps:
      - name: "Create GitHub Release"
        id: "create_github_release"
        if: "${{ startsWith(github.ref, 'refs/tags/') }}"
        uses: "actions/create-release@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{ github.ref }}"

  build_linux:
    name: "CI - Build Job (Linux)"
    needs:
      - "create_github_release"
    runs-on: "ubuntu-20.04"

    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Checkout Head of PR Instead of Merge Commit"
        run: "git checkout HEAD^2"
        if: "${{ github.event_name == 'pull_request' }}"

      - name: "Install SDL Dependencies"
        run: "sudo apt-get update && sudo apt-get -y install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev"

      - name: "Build with Cargo"
        run: "cargo build --release"

      - name: "Set SANTA_RACER_VERSION"
        run: "echo \"SANTA_RACER_VERSION=$(python -c \"import re; print(re.search(r'^version = \\\"(.*)\\\"$', open('Cargo.toml').read(), flags=re.MULTILINE).group(1), end='')\")\" >> $GITHUB_ENV"

      - name: "Create Release Asset"
        run: "python tools/createRelease.py"

      - name: "Upload Asset to GitHub Release"
        if: "${{ startsWith(github.ref, 'refs/tags/') }}"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          asset_content_type: "application/octet-stream"
          asset_name: "santa-racer-${{ env.SANTA_RACER_VERSION }}-linux.tar.gz"
          asset_path: "santa-racer-${{ env.SANTA_RACER_VERSION }}-linux.tar.gz"
          upload_url: "${{ needs.create_github_release.outputs.upload_url }}"

  build_windows:
    name: "CI - Build Job (Windows)"
    needs:
      - "create_github_release"
    runs-on: "windows-2019"

    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Checkout Head of PR Instead of Merge Commit"
        run: "git checkout HEAD^2"
        if: "${{ github.event_name == 'pull_request' }}"

      - name: "Install SDL Dependencies"
        run: "python tools/installSdlForWindows.py"

      - name: "Build with Cargo"
        run: "cargo build --release"

      - name: "Set SANTA_RACER_VERSION"
        run: "echo \"SANTA_RACER_VERSION=$(python -c \"import re; print(re.search(r'^version = \\``\"(.*)\\``\"$', open('Cargo.toml').read(), flags=re.MULTILINE).group(1), end='')\")\" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append"

      - name: "Create Release Asset"
        run: "python tools/createRelease.py"

      - name: "Upload Asset to GitHub Release"
        if: "${{ startsWith(github.ref, 'refs/tags/') }}"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          asset_content_type: "application/octet-stream"
          asset_name: "santa-racer-${{ env.SANTA_RACER_VERSION }}-windows.zip"
          asset_path: "santa-racer-${{ env.SANTA_RACER_VERSION }}-windows.zip"
          upload_url: "${{ needs.create_github_release.outputs.upload_url }}"
